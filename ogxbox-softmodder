#!/usr/bin/env bash

# DESCRIPTION ------------------------------------------------------------------
#
# This script is a Bash version of Rocky5's Xbox-Softmodding-Tool.
# See: https://github.com/Rocky5/Xbox-Softmodding-Tool
#
# NOTES:
# -	'Softmod/Softmod Files/Xbox Softmodding Tool.zip' has a different hash
# 	compared to Windows generated one.
# 	The different is in 'Installation Guide.htm'. It has same content but
# 	different size, characters count and hash. Perhaps because Windows add
# 	carriage return into it.
#	-	Files.rar (and archives contain it) has different hash compared to Windows
# 	generated one.
#		Files inside Files.rar are in exact hash. Perhaps this is because of
#		different archiver used to generate the archive.
# - There are some rm errors because of missing files or directories.
#
# CHANGELOG --------------------------------------------------------------------
#
# Sahri Riza Umami
#   v0.1 - 2019/07/16 18:24:18
#        - Initial release
#
# ------------------------------------------------------------------------------

# Get the script's directory.
if [[ ${BASH_SOURCE[0]%/*} == '.' ]]; then
  script_dir=$(cd "${BASH_SOURCE[0]%/*}" >/dev/null 2>&1 && pwd)
else
  script_dir=$(pwd)
fi

cd "$script_dir" || exit

# VARIABLES --------------------------------------------------------------------

output_iso_name='Xbox Softmodding Tool Extras Disc.iso'
source_directory='Extras Disc'
# https://github.com/XboxDev/extract-xiso
xiso='Other/Tools/extract-xiso'
zip_name='Xbox Softmodding Tool.zip'

# FUNCTIONS --------------------------------------------------------------------

message() {
  printf ':: %s\n' "$*"
}

# Print message in custom color.
print_in_brown() {
  printf '\e[1;33m:: %s\n\e[m' "$*"
}

print_in_green() {
  printf '\e[1;32m:: %s\n\e[m' "$*"
}

# Build save files for Xbox.
build_files_rar() {
  print_in_green 'Build Files.rar'
  [[ -f Files.rar ]] && rm Files.rar
  rar a -inul -ep1 -r -x*.db -x"*empty" 'C Partition/nkpatcher.rar' 'C Partition/nkpatcher'
  rar a -inul -ep1 -r -x*.db -x"*empty" 'C Partition/xboxdash.rar' 'C Partition/xboxdash/'
  rar a -inul -ep1 -r -x*.db -x"*empty" 'C Partition/nkp settings.rar' 'Save Folder/nkpatcher settings'
  rar a -inul -ep1 Files.rar 'C Partition'/{xboxdash,nkpatcher,'nkp settings'}.rar
  rm 'C Partition'/{xboxdash,nkpatcher,'nkp settings'}.rar
}

copy_saves() {
  mkdir -p Other/tmp/'Softmod Files'/{21585554/000000000000,4d530017,4541000d,SC-{NTSC,PAL}/5553000c,TH4-{NTSC,PAL}/41560017}
  cp -r 'Save Folder'/{'softmod files',*.{xbe,xbx}} 'Other/tmp/Softmod Files/21585554/000000000000'
  mv Files.rar 'Other/tmp/Softmod Files/21585554/000000000000/softmod files'
  cp -r Other/'Game Saves'/Softmod/* 'Other/tmp/Softmod Files/21585554'
  cp -r Other/'Game Saves'/Extracted/{MA/UDATA/4d530017,007/UDATA/4541000d} 'Other/tmp/Softmod Files'
  cp -r 'Other/Game Saves/Extracted/SC-NTSC/UDATA/5553000c' 'Other/tmp/Softmod Files/SC-NTSC'
  cp -r 'Other/Game Saves/Extracted/SC-PAL/UDATA/5553000c' 'Other/tmp/Softmod Files/SC-PAL'
  cp -r 'Other/Game Saves/Extracted/TH4-NTSC/UDATA/41560017' 'Other/tmp/Softmod Files/TH4-NTSC'
  cp -r 'Other/Game Saves/Extracted/TH4-PAL/UDATA/41560017' 'Other/tmp/Softmod Files/TH4-PAL'
  cp -r Other/'Game Saves'/BFM/* Other/tmp/
}

# Build save files for Xbox.
build_disc_save() {
  print_in_green 'Build Disc Save'
  [[ ! -f Files.rar ]] && build_files_rar
  # Build Softmod Save
  rm -r 'Extras Disc/Softmod/softmod files'
  mkdir -p 'Extras Disc/Softmod/softmod files' Other/tmp
  copy_saves
  cp 'Save Folder/softmod files/UX.xbe' Other/tmp/unleashx.xbe
  cd Other/tmp || exit
  mv 'Softmod Files' 'softmod files'
  zip -qr -x\*.db "../../Extras Disc/Softmod/softmod files/$zip_name" -- *
  cd "$script_dir" || exit
  rm -r Other/tmp
}

# Build save files for Xbox.
build_hdd_save() {
  print_in_green 'Build HDD Save'
  cd "$script_dir" || exit
  [[ ! -f Files.rar ]] && build_files_rar
  rm -r '../Test Build/UDATA'
  cp -r 'Save Folder'/* '../Test Build/UDATA/21585554/000000000000'
  rm -r '../Test Build/UDATA/21585554/000000000000/nkpatcher settings'
  mv Files.rar '../Test Build/UDATA/21585554/000000000000/Softmod Files'
  cp -r Other/'Game Saves'/Softmod/* '../Test Build/UDATA/21585554'
  xdg-open '../Test Build/UDATA/21585554/000000000000'
}

# Build save files for Xbox.
build_installer_variants() {
  print_in_green 'Build Installer Variants'
  [[ ! -f Files.rar ]] && build_files_rar
  mkdir -p Other/tmp
  copy_saves
  for up in Update Upgrade; do
    cp 'Save Folder/softmod files/UX.xbe' "Installer Variants/Quick $up/Quick $up/unleashx.xbe"
    cp Other/tmp/{boot.cfg,default.xbe,NoVC.bin} "Installer Variants/Quick $up/Quick $up/"
    cp -r 'Other/tmp/Softmod Files/' "Installer Variants/Quick $up/Quick $up"
    cp -r 'Other/tmp/Softmod Files/21585554/000000000000/softmod files/skin files' "Installer Variants/Quick $up/Quick $up/skins/skin files/"
  done

  rm -r 'Installer Variants/Quick Update/Quick Update/Softmod Files/'{4d530017,4541000d,SC-NTSC,SC-PAL,TH4-NTSC,TH4-PAL}
  cp 'Save Folder/softmod files/UX.xbe' 'Installer Variants/XBHDM Build/C/installer/unleashx.xbe'
  cp -r 'Other/tmp/Softmod Files' 'Installer Variants/XBHDM Build/C/installer/Softmod Files'
  cp -r 'Other/tmp/Softmod Files/21585554/000000000000/softmod files/skin files' 'Installer Variants/XBHDM Build/C/installer/skins/skin files'

  cd 'Installer Variants/Quick Update' || exit
  zip -qr -x\*.db '../../Quick Update' -- *
  cd '../Quick Upgrade' || exit
  zip -qr -x\*.db '../../Quick Upgrade' -- *
  cd .. || exit
  zip -qr -x\*.db '../XBHDM Build' 'XBHDM Build'
  rm -r 'Quick Update/Quick Update/'{skins/'skin files','Softmod Files',unleashx.xbe,default.xbe,boot.cfg,NoVC.bin}
  rm -r 'Quick Upgrade/Quick Upgrade/'{skins/'skin files','Softmod Files',unleashx.xbe,default.xbe,boot.cfg,NoVC.bin}
  rm -r 'XBHDM Build/C/installer/'{skins/'skin files','Softmod Files',unleashx.xbe}

  cd '../Utilites/Xbox/Attacher, Detacher' || exit
  [[ ! -f 'Extras Disc Attacher.zip' ]] && zip -qr 'Extras Disc Attacher' -- *

  cd "$script_dir" || exit

  # NOTE: Upstream bug. There is no 'Softmod Files'.
  # Use -f to suppress cp error.
  rm -rf Other/{tmp,'Game Saves/BFM/Softmod Files'}
}

# Build Release build.
build_softmod_zip() {
  print_in_green 'Build Softmod zip'
  [[ -f Files.rar ]] && rm Files.rar
  build_files_rar
  # Build Softmod Save.zip
  mkdir -p temp/{'Softmod Package','Installation Guide',UDATA/21585554/000000000000}
  cd temp || exit
  cp -r ../'Save Folder'/* UDATA/21585554/000000000000
  cp -r ../Other/'Game Saves'/Softmod/* UDATA/21585554/
  cp ../Other/'Game Saves'/Zipped/*.zip 'Softmod Package'
  cp -r '../Documents/Installation Guide' .
  mv ../Files.rar 'UDATA/21585554/000000000000/Softmod Files'
  rm -r 'UDATA/21585554/000000000000/nkpatcher settings'
  zip -qr -x\*.db '../temp/Softmod Package/Softmod Save.zip' UDATA/21585554
  # Build Xbox Softmodding Tool.zip
  cp ../Documents/ReadMe.url ReadMe.url
  zip -qr -x\*.db "../$zip_name" 'Installation Guide' 'Softmod Package' ReadMe.url
  cd '../Installer Variants/UDDAE/' || exit
  zip -qr -x\*.db '../../Extras Disc/Softmod/dashboards/msdash/other/UDDAE-C.zip' 'resoftmod dash'
  cd "$script_dir" || exit
  zip -qr -x\*.db "$zip_name" Changes.txt
  zip -qr -x\*.db "$zip_name" Documents/{Troubleshooting.txt,'How to run the exploit save.txt'}
  zip -qr -x\*.db "$zip_name" Utilites/PC/{'Open FTP Window.bat','OpenDash Dualboot.Settings'}
  rm -r temp
}

build_test_xiso() {
  print_in_green 'Build test XISO'
  message 'About to create an Xbox test ISO.'
  message "Source Directory: $source_directory"
  message "Output ISO Name: $output_iso_name"
  build_disc_save
  mv "$source_directory/Softmod/Other" Other
  $xiso -qc "$source_directory" "$output_iso_name"
  mv "Other/Other" "$source_directory/Softmod"
  rm -r "$source_directory/Softmod/Softmod Files/Softmod Files"
}

build_xiso() {
  print_in_green 'Build XISO'
  message 'About to create an Xbox ISO.'
  message "Source Directory: $source_directory"
  message "Output ISO Name: $output_iso_name"
  build_disc_save
  $xiso -qc "$source_directory" "$output_iso_name"
  # NOTE: Upstream bug. There is no 'Softmod Files'.
  # Use -f to suppress cp error.
  rm -rf "$source_directory/Softmod/Softmod Files/Softmod Files"
}

build_xiso_application() {
  print_in_green 'Build XISO application'
  message 'About to create an Xbox ISO application.'
  message "Source Directory: $source_directory"
  message "Output ISO Name: Xbox Softmodding Tool Extras Disc/$output_iso_name"
  build_disc_save
  cp -r 'Utilites/Xbox/Attacher, Detacher/Xbox Softmodding Tool Extras Disc' 'Xbox Softmodding Tool Extras Disc'
  $xiso -qc "$source_directory" "Xbox Softmodding Tool Extras Disc/$output_iso_name"
  rm -r "$source_directory/Softmod/Softmod Files/Softmod Files"
}

remove_all_thumbdb() {
  print_in_green 'RemvAll Thumbs.db Files'
  find . -type f \( -name 'Thumbs.db' -o -name 'desktop.ini' \) -exec rm '{}' \;
}

update_skin_version() {
  print_in_green 'Update Skin Version Number'
  mapfile version < "Other/Build Version.txt"
  # Build Version.txt contain carriage return (\r).
  # Slice the string to extract version number without \r.
  # As long as the version number is in 5 digits this will be fine.
  old_version=${version:8:5}

  # Using Bash's mapfile to replace string in file.
  read -rp ':: Enter New version number: ' new_version
  if [[ -z "$new_version" ]]; then
    message "Current Build Version = $old_version"
    message "Using $old_version as the version number."
  else
    replace=$new_version
    message "Using $new_version as the version number."
    mapfile < "Other/Build Version.txt"; echo "${MAPFILE[@]/$old_version/$replace}" > 'Build Version.txt'
    mapfile < README.md; echo "${MAPFILE[@]/Xbox Softmodding Tool v$old_version/Xbox Softmodding Tool v$replace}" > README.md
    mapfile < Changes.txt; echo "${MAPFILE[@]/Xbox Softmodding Tool v$old_version/Xbox Softmodding Tool v$replace}" > Changes.txt

    while IFS= read -r -d '' skin; do
      mapfile < "$skin"; echo "${MAPFILE[@]/<Version>$old_version<\/Version>/<Version>$replace<\/Version>}" > "$skin"
    done < <(find . -type f -name 'skin.xml' -print0)

    for skinwe in 'Save Folder/nkpatcher settings/skins/Dashboard'/skin{wide,evox}.xml; do
      mapfile < "$skinwe"; echo "${MAPFILE[@]/<Version>$old_version<\/Version>/<Version>$replace<\/Version>}" > "$skinwe"
    done
  fi
}

build_release() {
  print_in_green 'Build Release'

  [[ -d temp ]] && rm -r temp
  [[ -d ../Release ]] && rm -r ../Release
  mkdir -p ../Release/{'Installer Variants',Utilites,Documents,'Extras Disc'/{Documents,Extras}}

  update_skin_version
  remove_all_thumbdb
  build_softmod_zip
  build_installer_variants
  build_xiso

  #  Xbox Softmodding Tool
  mv "$zip_name" ../Release
  cp Changes.txt ../Release
  cp Documents/ReadMe.url '../Release/Read Me.url'
  # NOTE: Upstream bug. There is no 'Free FTP Programs.txt'
  # cp 'Documents/'{'Free FTP Programs.txt','How to run the exploit save.txt',Troubleshooting.txt} ../Release/Documents
  cp 'Documents/'{'How to run the exploit save.txt',Troubleshooting.txt} ../Release/Documents
  cp Other/Graphics/thumb.jpg ../Release
  #  Extras Disc
  mv -- *.iso '../Release/Extras Disc'
  cp Documents/{'UDDAE Instructions.txt','Run XISO from HDD.txt'} '../Release/Extras Disc/Documents'
  cp 'Utilites/Xbox/Attacher, Detacher/Extras Disc Attacher.zip' '../Release/Extras Disc/Extras'
  #  Variants
  mv 'Quick Update.zip' 'Quick Upgrade.zip' 'XBHDM Build.zip' '../Release/Installer Variants'
  #  Tools
  cp Utilites/PC/zipped/* ../Release/Utilites
  xdg-open ../Release
}

print_help() {
  printf '%s\n' "
  Softmodding tool for first generation Xbox.

  Usage: ${0##*/} OPTION

  OPTION:
    -ds, disc-save              create game save
    -f, files-rar               create nkpatcher files.rar
    -hds, hdd-save             	create game save on disk
    -iv, installer-variants     create installer variants
    -r, release                 build release
    -rm, rm-thumbdb             remove thumb.dbs and desktop inis
    -s, softmod-zip             create Xbox Softmodding Tool.zip
    -tx, test-xiso              build test Xbox Softmodding Tool Extras Disc.iso
    -us, update-skin            update skin version
    -x, xiso                    build Xbox Softmodding Tool Extras Disc.iso
    -xa, xiso-app               build Xbox Softmodding Tool Extras Disc.iso

  Most of the time, all you need is just build a release:
    ${0##*/} -r
  or
    ${0##*/} release
"
}

# MAIN -------------------------------------------------------------------------

# This script using recent bashisms, so make sure to run on newer bash shell.
if [[ ${BASH_VERSINFO[0]} -lt 4 ]]; then
  print_in_brown 'Sorry, you need at least bash-4.0 to run this script.'
  exit
fi

# Checking dependencies.
declare -a DEPS=(rar zip)
for ((NUM=${#DEPS[@]},i=0; i<NUM;i++)); do
  if command -v "${DEPS[i]}" &>/dev/null ; then
    unset -v "DEPS[i]"
  fi
done

# Exit if dependency not found.
if [[ "${#DEPS[@]}" -gt 0 ]]; then
  print_in_brown 'Package(s) not found'
  print_in_brown 'Install the proper distribution package for your system:'
  printf '   - %s\n' "${DEPS[@]}"
  exit 1
fi

case "$1" in
  -ds|disc-save)
    build_disc_save
  ;;
  -f|files-rar)
    build_files_rar
  ;;
  -hds|hdd-save)
    build_hdd_save
  ;;
  -iv|installer-variants)
    build_installer_variants
  ;;
  -r|release)
    build_release
  ;;
  -rr|rm-thumbdb)
    remove_all_thumbdb
  ;;
  -s|softmod-zip)
    build_softmod_zip
  ;;
  -tx|test-xiso)
    build_test_xiso
  ;;
  -us|update-skin)
    update_skin_version
  ;;
  -x|xiso)
    build_xiso
  ;;
  -xa|xiso-app)
    build_xiso_application
  ;;
  *)
    print_help
  ;;
esac
